name: All-Platform Pull and Save Docker Image

on:
  workflow_dispatch:
    inputs:
      docker_images:
        description: '请填写docker镜像名称 多个用英文逗号分开'
        required: true
        default: 'alpine:latest,busybox:stable-glibc'  # 设置默认的 Docker 镜像列表

jobs:
  pull_and_package:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Install JQ
      run: |
        sudo apt-get update
        sudo apt-get install -y jq

    - name: Pull Docker Images and Package
      run: |
        images="${{ github.event.inputs.docker_images }}"
        IFS=',' read -r -a image_array <<< "$images"
        for image in "${image_array[@]}"; do
          # 获取镜像支持的所有平台
          platforms=$(docker buildx imagetools inspect "$image" --raw | jq -r '.manifests[].platform | "\(.os)/\(.architecture)/\(.variant // empty)"' | tr '\n' ',' | sed 's/,$//')
          if [ -z "$platforms" ]; then
            echo "未找到 $image 的平台信息"
            continue
          fi
          echo "找到 $image 的平台信息：$platforms"

          for platform in $(echo $platforms | tr ',' '\n'); do
            platform_name="${platform//\//_}"
            image_name="${image//\//_}"
            image_name="${image_name//:/_}"
            
            # 使用docker pull --platform尝试拉取特定平台的镜像
            echo "正在拉取 $image 平台: $platform"
            if docker pull --platform "$platform" "$image"; then
              # 保存镜像
              docker save "$image" -o "${image_name}-${platform_name}.tar"
              gzip -c "${image_name}-${platform_name}.tar" > "${image_name}-${platform_name}.tar.gz"
              rm "${image_name}-${platform_name}.tar"
              echo "已下载 $image 平台: $platform"
            else
              echo "下载 $image 平台: $platform 失败"
            fi
          done
        done

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: my-artifact
        path: ${{ github.workspace }}/*.tar.gz
        retention-days: 1  # 将保留天数设置为 1 天 最多可设置90天
